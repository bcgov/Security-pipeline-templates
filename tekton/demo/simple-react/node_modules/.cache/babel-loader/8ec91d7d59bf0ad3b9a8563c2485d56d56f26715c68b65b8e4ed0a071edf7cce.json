{"ast":null,"code":"var _jsxFileName = \"/Users/christopertan/simple-react/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState, useRef, useEffect } from 'react';\nimport Checklist from './Checklist';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LOCAL_STORAGE_KEY = 'checklist';\nfunction App() {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const taskRef = useRef();\n  useEffect(() => {\n    const storedTask = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY));\n    if (storedTask) setTasks(storedTask);\n  }, []);\n  useEffect(() => {\n    localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(tasks));\n  }, [tasks]);\n  function toggleTask(id) {\n    const copyTasks = [...tasks];\n    const task = copyTasks.find(task => task.id === id);\n    task.complete = !task.complete;\n    setTasks(copyTasks);\n  }\n  function addTask(e) {\n    const name = taskRef.current.value;\n    const uuid = require('uuid');\n    if (name === '') return;\n    setTasks(prevTask => {\n      return [...prevTask, {\n        id: uuid.v4(),\n        name: name,\n        complete: false\n      }];\n    });\n    taskRef.current.value = null;\n  }\n  function clearTask() {\n    const copyTask = tasks.filter(task => !task.complete);\n    setTasks(copyTask);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Checklist\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Your tasks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [tasks.filter(task => !task.complete).length, \" remaining tasks\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Checklist, {\n      tasks: tasks,\n      toggleTask: toggleTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      ref: taskRef,\n      type: \"text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addTask,\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: clearTask,\n        children: \"Clear completed tasks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"8Hfqh/DEv01W2LUGML9jgFoT98Q=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useRef","useEffect","Checklist","jsxDEV","_jsxDEV","LOCAL_STORAGE_KEY","App","_s","tasks","setTasks","taskRef","storedTask","JSON","parse","localStorage","getItem","setItem","stringify","toggleTask","id","copyTasks","task","find","complete","addTask","e","name","current","value","uuid","require","prevTask","v4","clearTask","copyTask","filter","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","ref","type","onClick","_c","$RefreshReg$"],"sources":["/Users/christopertan/simple-react/src/App.js"],"sourcesContent":["import {useState, useRef, useEffect} from 'react'\nimport Checklist from './Checklist'\n\nconst LOCAL_STORAGE_KEY = 'checklist'\n\nfunction App() {\n  const [tasks, setTasks] = useState([])\n  const taskRef = useRef()\n  \n  useEffect(() => {\n    const storedTask = JSON.parse(localStorage.getItem\n      (LOCAL_STORAGE_KEY))\n    if (storedTask) setTasks(storedTask)\n  }, [])\n\n  useEffect (() => {\n    localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(tasks))\n  }, [tasks])\n\n  function toggleTask(id) {\n    const copyTasks = [...tasks]\n    const task = copyTasks.find(task => task.id === id)\n    task.complete = !task.complete\n    setTasks(copyTasks)\n  }\n\n   \n  function addTask(e){\n    const name = taskRef.current.value\n    const uuid = require('uuid')\n    if (name === '') return\n    setTasks(prevTask => {\n      return [...prevTask, {id: uuid.v4(), name: name, complete:false}]\n    })\n    taskRef.current.value = null\n  }\n\n  function clearTask(){\n    const copyTask = tasks.filter(task => !task.complete)\n    setTasks(copyTask)\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>Checklist</h1>\n      <h4>Your tasks</h4>\n\n      <div>{tasks.filter(task => !task.complete).length} remaining tasks</div>\n      <Checklist tasks={tasks} toggleTask={toggleTask}/>\n      <input ref={taskRef} type='text' />\n      <div>\n        <button onClick={addTask}>Add</button>\n        <button onClick={clearTask}>Clear completed tasks</button>\n      </div>\n    \n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}